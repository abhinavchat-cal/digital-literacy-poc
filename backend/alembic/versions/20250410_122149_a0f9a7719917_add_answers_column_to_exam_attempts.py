"""Add answers column to exam_attempts

Revision ID: a0f9a7719917
Revises: ef1c021c3afc
Create Date: 2025-04-10 12:21:49.002334+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a0f9a7719917'
down_revision: Union[str, None] = 'ef1c021c3afc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('exam_attempts', sa.Column('answers', sa.JSON(), nullable=True))
    op.alter_column('exam_attempts', 'candidate_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('exam_attempts', 'exam_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.alter_column('exam_attempts', 'score_percentage',
               existing_type=sa.NUMERIC(precision=5, scale=2),
               type_=sa.Float(),
               nullable=False)
    op.alter_column('exam_attempts', 'passed',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('exam_attempts', 'attempted_on',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint('exam_attempts_candidate_id_fkey', 'exam_attempts', type_='foreignkey')
    op.create_foreign_key(None, 'exam_attempts', 'users', ['candidate_id'], ['id'])
    op.alter_column('exams', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('exams', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_constraint(None, 'exam_attempts', type_='foreignkey')
    op.create_foreign_key('exam_attempts_candidate_id_fkey', 'exam_attempts', 'candidates', ['candidate_id'], ['user_id'])
    op.alter_column('exam_attempts', 'attempted_on',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('exam_attempts', 'passed',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('exam_attempts', 'score_percentage',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=5, scale=2),
               nullable=True)
    op.alter_column('exam_attempts', 'exam_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.alter_column('exam_attempts', 'candidate_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.drop_column('exam_attempts', 'answers')
    # ### end Alembic commands ### 